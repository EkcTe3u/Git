Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.

Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

JSON
 4. Создать внешний репозиторий c названием JSON.                    : github.com -> log in -> your profile -> Repositories -> New
 5. Клонировать репозиторий JSON на локальный компьютер.             : git clone + https://github.com/EkcTe3u/JSON.git
 6. Внутри локального JSON создать файл “new.json”.                  : touch new.json
 7. Добавить файл под гит.                                           : git add .
 8. Закоммитить файл.                                                : git commit -m "new.json file"
 9. Отправить файл на внешний GitHub репозиторий.                    : git push
 10. Отредактировать содержание файла “new.json” - написать
 информацию о себе (ФИО, возраст, количество домашних животных,
 будущая желаемая зарплата). Всё написать в формате JSON.            : vim new.json -> enter name, age and ets
 11. Отправить изменения на внешний репозиторий.                     : repeat steps number 7 -> 8-> 9
 12. Создать файл preferences.json                                   : touch preferences.json
 13. В файл preferences.json добавить информацию
 о своих предпочтениях (Любимый фильм, любимый сериал,
 любимая еда, любимое время года, сторона которую хотели бы посетить)
 в формате JSON.                                                     : vim preferences.json -> enter favorite film, favorite series and so on
 14. Создать файл skills.json добавить информацию о скиллах,
 которые будут изучены на курсе в формате JSON                       : touch skills.json
 15. Отправить сразу 2 файла на внешний репозиторий.                 : git add . -> git commit -am "your message" -> git push
 16. На веб интерфейсе создать файл bug_report.json.                 : go to JSON repositories -> add file -> create new file
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. : add description + save changes
 18. На веб интерфейсе модифицировать файл bug_report.json,
 добавить баг репорт в формате JSON.                                 : add example bug report in .json format
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. : add description + save changes
 20. Синхронизировать внешний и локальный репозиторий JSON           : git pull
 
 
 ---------------------------------------------------------------------
 XML
 21. Создать внешний репозиторий c названием XML.                    : github.com -> log in -> your profile -> Repositories -> New
 22. Клонировать репозиторий XML на локальный компьютер.             : git clone + https://github.com/EkcTe3u/XML.git
 23. Внутри локального XML создать файл “new.xml”.                   : touch new.xml
 24. Добавить файл под гит.                                          : git add .
 25. Закоммитить файл.                                               : git commit -m "new.xml file"
 26. Отправить файл на внешний GitHub репозиторий.                   : git push
 27. Отредактировать содержание файла “new.xml” - написать
 информацию о себе (ФИО, возраст, количество домашних животных,
 будущая желаемая зарплата). Всё написать в формате XML.             : vim new.xml -> enter name, age and ets
 28. Отправить изменения на внешний репозиторий.                     : git add . -> git commit -m "message" -> git push
 29. Создать файл preferences.xml                                    : touch preferences.xml
 30. В файл preferences.xml добавить информацию
 о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда,
 любимое время года, сторона которую хотели бы посетить)
 в формате XML.                                                      : vim preferences.xml -> add data
 31. Создать файл skills.xml добавить информацию о скиллах,
 которые будут изучены на курсе в формате XML                        : touch skills.xml
 32. Сделать коммит в одну строку.                                   : git add . | git commit -am "message"
 33. Отправить сразу 2 файла на внешний репозиторий.                 : git push
 34. На веб интерфейсе создать файл bug_report.xml.                  : go to XML repositories -> add file -> create new file
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. : add description + save changes
 36. На веб интерфейсе модифицировать файл bug_report.xml,
 добавить баг репорт в формате XML.                                  : add example bug report in .xml format
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. : add description + save changes
 38. Синхронизировать внешний и локальный репозиторий XML            : git pull
 
 
 ---------------------------------------------------------------------
  TXT
 1. Создать внешний репозиторий c названием TXT.                     : github.com -> log in -> your profile -> Repositories -> New
 2. Клонировать репозиторий TXT на локальный компьютер.              : git clone + https://github.com/EkcTe3u/TXT.git
 3. Внутри локального TXT создать файл “new.txt”.                    : touch new.txt
 4. Добавить файл под гит.                                           : git add .
 5. Закоммитить файл.                                                : git commit -m "new.txt file"
 6. Отправить файл на внешний GitHub репозиторий.                    : git push
 7. Отредактировать содержание файла “new.txt” - написать
 информацию о себе (ФИО, возраст, количество домашних животных,
 будущая желаемая зарплата). Всё написать в формате TXT.             : vim new.txt -> add data
 8. Отправить изменения на внешний репозиторий.
 9. Создать файл preferences.txt                                     : touch preferences
 10. В файл preferences.txt” добавить информацию
 о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда,
 любимое время года, сторона которую хотели бы посетить)
 в формате TXT.                                                      : vim preferences.txt -> add data
 11. Создать файл skills.txt добавить информацию о скиллах,
 которые будут изучены на курсе в формате TXT                        : touch skills.txt
 12. Сделать коммит в одну строку.                                   : git add . | git commit -am "message"
 13. Отправить сразу 2 файла на внешний репозиторий.                 : git push
 14. На веб интерфейсе создать файл bug_report.txt.                  : go to TXT repositories -> add file -> create new file
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. : add description + save changes
 16. На веб интерфейсе модифицировать файл bug_report.txt,
 добавить баг репорт в формате TXT.                                  : add example bug report in .txt format
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. : add description + save changes
 18. Синхронизировать внешний и локальный репозиторий TXT            : git pull